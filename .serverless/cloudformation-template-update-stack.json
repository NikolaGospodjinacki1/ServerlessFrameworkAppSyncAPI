{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "OriginAccessIdentity": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": {
            "Fn::Sub": "scrummetrics_dev_s3_origin_oai"
          }
        }
      }
    },
    "StaticResourcesBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Fn::Sub": "scrummetrics-static-bucket-dev"
        },
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      }
    },
    "Distribution": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Origins": [
            {
              "DomainName": {
                "Fn::Sub": "${StaticResourcesBucket}.s3.${AWS::Region}.amazonaws.com"
              },
              "Id": "S3Origin",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Sub": "origin-access-identity/cloudfront/${OriginAccessIdentity}"
                }
              }
            }
          ],
          "Enabled": true,
          "DefaultRootObject": "index.html",
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "DELETE",
              "GET",
              "HEAD",
              "OPTIONS",
              "PATCH",
              "POST",
              "PUT"
            ],
            "TargetOriginId": "S3Origin",
            "ForwardedValues": {
              "QueryString": false,
              "Cookies": {
                "Forward": "none"
              }
            },
            "ViewerProtocolPolicy": "redirect-to-https",
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6"
          },
          "PriceClass": "PriceClass_100"
        }
      }
    },
    "Table": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "projectId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "projectId",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "TableName": "scrummetricsAppSychAPI-dev-scrummetrics"
      }
    },
    "CognitoUserPool": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": false
        },
        "AliasAttributes": [
          "email"
        ],
        "MfaConfiguration": "OFF",
        "Policies": {
          "PasswordPolicy": {
            "MinimumLength": 8,
            "RequireLowercase": true,
            "RequireNumbers": true,
            "RequireSymbols": false,
            "RequireUppercase": true,
            "TemporaryPasswordValidityDays": 7
          }
        },
        "Schema": [
          {
            "Name": "email",
            "AttributeDataType": "String",
            "Mutable": true,
            "Required": true
          }
        ],
        "UserPoolAddOns": {
          "AdvancedSecurityMode": "OFF"
        },
        "UserPoolName": {
          "Fn::Sub": "user-pool-scrummetrics-dev"
        }
      }
    },
    "CognitoUserPoolClient": {
      "DependsOn": [
        "CognitoUserPool",
        "CognitoUserPoolDomain"
      ],
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "ClientName": {
          "Fn::Sub": "client-scrummetrics-dev"
        },
        "GenerateSecret": false,
        "UserPoolId": {
          "Ref": "CognitoUserPool"
        },
        "SupportedIdentityProviders": [
          "COGNITO"
        ],
        "CallbackURLs": [
          "http://localhost:4200"
        ],
        "LogoutURLs": [
          "http://localhost:4200"
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "email",
          "openid",
          "profile"
        ],
        "AllowedOAuthFlows": [
          "code",
          "implicit"
        ],
        "ExplicitAuthFlows": [
          "ALLOW_ADMIN_USER_PASSWORD_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH"
        ]
      }
    },
    "CognitoUserPoolDomain": {
      "DependsOn": [
        "CognitoUserPool"
      ],
      "Type": "AWS::Cognito::UserPoolDomain",
      "Properties": {
        "Domain": "metricstest123",
        "UserPoolId": {
          "Ref": "CognitoUserPool"
        }
      }
    },
    "StaticResourcesBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "StaticResourcesBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Sub": "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${OriginAccessIdentity}"
                }
              },
              "Action": "s3:GetObject",
              "Resource": {
                "Fn::Sub": "arn:aws:s3:::${StaticResourcesBucket}/*"
              }
            }
          ]
        }
      }
    },
    "CognitoAuthRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "app_scrummetrics_auth_role",
        "Path": "/",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              },
              "Action": [
                "sts:AssumeRoleWithWebIdentity"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "cognito_scrummetrics_authorized_policy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "mobileanalytics:PutEvents",
                    "cognito-sync:*",
                    "cognito-identity:*"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "execute-api:Invoke"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "AppSyncServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Sub": "appsync_scrummetrics_api_role"
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "appsync.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "dynamodb_scrummetrics_policy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:DescribeTable",
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem"
                  ],
                  "Resource": "arn:aws:dynamodb:eu-west-1:*:table/scrummetricsAppSychAPI-dev-scrummetrics"
                }
              ]
            }
          }
        ]
      }
    },
    "GraphQlApi": {
      "Type": "AWS::AppSync::GraphQLApi",
      "Properties": {
        "Name": "scrummetrics_api",
        "AuthenticationType": "AMAZON_COGNITO_USER_POOLS",
        "AdditionalAuthenticationProviders": [],
        "UserPoolConfig": {
          "AwsRegion": "eu-west-1",
          "UserPoolId": {
            "Ref": "CognitoUserPool"
          },
          "DefaultAction": "ALLOW"
        },
        "XrayEnabled": true,
        "Tags": [
          {
            "Key": "project",
            "Value": "scrummetrics"
          }
        ]
      }
    },
    "GraphQlSchema": {
      "Type": "AWS::AppSync::GraphQLSchema",
      "Properties": {
        "Definition": "enum Type {\n  internal\n  external\n}\n\ninput TeamInput {\n  name: String!\n  id: String!\n}\n\ninput ProjectCreateRequest {\n  name: String!\n  type: Type!\n  team: [TeamInput]\n  description: String\n}\n\ninput ProjectRequest {\n  projectId: String!\n}\n\ntype Mutation {\n  putProject(input: ProjectCreateRequest): CreateResponse\n}\n\ntype Query {\n  getProjectById(input: ProjectRequest): ProjectOutput\n}\n\ntype TeamOutput {\n  name: String\n  id: String\n}\n\ntype ProjectOutput {\n  projectId: String\n  name: String\n  type: Type\n  team: [TeamOutput]\n  description: String\n}\n\ntype CreateResponse {\n  result: AWSJSON\n}\n\nschema {\n  query: Query\n  mutation: Mutation\n}",
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        }
      }
    },
    "GraphQlDsdynamodbsource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "Name": "dynamodb_source",
        "Description": "source/location table",
        "Type": "AMAZON_DYNAMODB",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "AppSyncServiceRole",
            "Arn"
          ]
        },
        "DynamoDBConfig": {
          "AwsRegion": "eu-west-1",
          "TableName": {
            "Ref": "Table"
          },
          "UseCallerCredentials": false,
          "Versioned": false
        }
      }
    },
    "GraphQlResolverQuerygetProjectById": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "GraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Query",
        "FieldName": "getProjectById",
        "RequestMappingTemplate": "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"Query\",\n    \"query\" : {\n        ## Provide a query expression. **\n        \"expression\": \"projectId = :projectId\",\n        \"expressionValues\" : {\n            \":projectId\" : $util.dynamodb.toDynamoDBJson($ctx.args.input.projectId)\n        }\n    }\n}",
        "ResponseMappingTemplate": "\n      $util.toJson($ctx.result.items.get(0))\n",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GraphQlDsdynamodbsource",
            "Name"
          ]
        }
      }
    },
    "GraphQlResolverMutationputProject": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "GraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Mutation",
        "FieldName": "putProject",
        "RequestMappingTemplate": "#set( $projectId = $util.autoUlid() )\n{\n   \"version\" : \"2017-02-28\",\n   \"operation\" : \"PutItem\",\n   \"key\" : {\n      \"projectId\" : $util.dynamodb.toDynamoDBJson(\"${projectId}\")\n   },\n   \"attributeValues\" : $util.dynamodb.toMapValuesJson($ctx.args.input)\n}",
        "ResponseMappingTemplate": "\n\n#set( $res = $ctx.result )\n$util.toJson({\"result\": $ctx.result})",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GraphQlDsdynamodbsource",
            "Name"
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-scrummetricsAppSychAPI-dev-ServerlessDeploymentBucketName"
      }
    },
    "DistributionId": {
      "Description": "CloudFront Distribution Id",
      "Value": {
        "Ref": "Distribution"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-DistributionId"
        }
      }
    },
    "DistributionDomainName": {
      "Description": "CloudFront Distribution Domain Name",
      "Value": {
        "Fn::GetAtt": [
          "Distribution",
          "DomainName"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-DistributionDomainName"
        }
      }
    },
    "StaticResourcesBucketName": {
      "Description": "Static Resources Bucket Name",
      "Value": {
        "Ref": "StaticResourcesBucket"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-StaticResourcesBucketName"
        }
      }
    },
    "GraphQlApiId": {
      "Value": {
        "Fn::GetAtt": [
          "GraphQlApi",
          "ApiId"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-GraphQlApiId"
        }
      }
    },
    "GraphQlApiUrl": {
      "Value": {
        "Fn::GetAtt": [
          "GraphQlApi",
          "GraphQLUrl"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-GraphQlApiUrl"
        }
      }
    }
  }
}